define(["templates/competitions","services/competitions","utils"],function(e,t,n){return Vue.extend({template:e["board-build"],data:function(){return{boards:[],participants:[],participant:null,boardId:null,cycleNames:[],rounds:[],board:null,error:""}},mounted:function(){var n=this;Vue.http.get("/api/v2/competitions/matches/boards?participants="+encodeURIComponent(this.participants.length)).then(function(e){for(var t=0;t<e.body.length;t++)n.boards.push(e.body[t]);n.boards.sort(function(e,t){return e.name.localeCompare(t.name)}),n.boardId&&n.onBoardChanged()})},methods:{onBoardChanged:function(){var c=this;this.boardId&&Vue.http.get("/api/v2/competitions/matches/boards/"+encodeURIComponent(this.boardId)+"/"+encodeURIComponent(this.participants.length)).then(function(e){if(c.cycleNames.splice(0,c.cycleNames.length),c.rounds.splice(0,c.rounds.length),e.body){c.board=e.body;for(var t=e.body.levels[1],n=0;n<t.length;n++)c.cycleNames.push(t[n]);var a=e.body.levels[0];for(n=0;n<a.length;n++)c.rounds.push({name:a[n],cycles:[]});for(n=0;n<e.body.matches.length;n++){var o=e.body.matches[n],s=c.rounds[o.sequence[0]];s||(c.rounds[s]={name:s,cycles:[]});for(var i=o.sequence[1];i>=s.cycles.length;)s.cycles.push({matches:[]});s.cycles[i].matches.push({a:{number:o.a,name:c.participants[o.a]},b:{number:o.b,name:c.participants[o.b]}})}}else c.board=null})},toggleParticipant:function(e){this.participant===e?this.participant=null:this.participant=e},confirm:function(){this.board&&this.$emit("close",this.board)},cancel:function(){this.$emit("close")}}})});